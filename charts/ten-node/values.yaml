global:
  imagePullSecrets: []
  imagePullPolicy: Always

# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""
enclave:
  replicaCount: 1
  image:
    repository: testnetobscuronet.azurecr.io/obscuronet/sepolia_enclave
    tag: "latest"
    pullPolicy: Always
    imagePullSecrets: []

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80

  nodeSelector:
    kubernetes.io/hostname: aks-sgxpool2-37956146-vmss000001

  tolerations: []

  affinity: {}  # Ensure this matches the agent pool label

  # affinity:
  #   nodeAffinity:
  #     required:
  #       nodeSelectorTerms:
  #       - matchExpressions:
  #         - key: kubernetes.io/hostname
  #           operator: In
  #           values:
  #           - "aks-sgxpool2-37956146-vmss000001"  # Replace with your actual node hostname

  
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: false

  secretEnv:
    ENCLAVE_DB_SQLITEPATH: ""

  extraEnv: []

  service:
    type: ClusterIP
    port: 11001

  ports:
    - name: rpc
      port: 11001
      containerPort: 11001

  resources:
    limits:
      memory: 8Gi
      cpu: 2000m
    requests:
      memory: 8Gi
      cpu: 1000m

  # storage:
  #   storageClass: "default"
  #   size: 10Gi  

  serviceAccount:
    create: true
  edb:
    image:
      repository: "ghcr.io/edgelesssys"
      tag: "v0.3.2"
      pullPolicy: "Always"
      imagePullSecrets: []
    sqlApiHost: "0.0.0.0"
    sqlApiPort: 3306
    restApiHost: "0.0.0.0"
    restApiPort: 8080
    debug: false
    simulation: false
    heapSize: 4
    marbleType: EdgelessDB
    launchMarble: false
    resources:
      limits:
        sgx.intel.com/epc: "10Mi"
        sgx.intel.com/provision: 1
        sgx.intel.com/enclave: 1
    storage:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
    tolerations:
      - key: sgx.intel.com/epc
        operator: Exists
        effect: NoSchedule

 # Ensure this matches the node hostname

host:
  enabled: true
  replicaCount: 1
  image:
    repository: "testnetobscuronet.azurecr.io/obscuronet/sepolia_host"
    tag: "latest"
    pullPolicy: "Always"
    imagePullSecrets: []
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: false
  fqdn: dev-testnet-sequencer.ten.xyz   
  secretEnv:
    NODE_PRIVATEKEY: "" #Private key of the node
  extraEnv: []
  service:
    type: LoadBalancer
  ports:
    - name: http
      port: 8085
      containerPort: 8085
    - name: ws
      port: 8089
      containerPort: 8089
    - name: p2p
      port: 10000
      containerPort: 10000
  resources:
    limits:
      memory: 1Gi
      cpu: 500m
    requests:
      memory: 1Gi
      cpu: 200m

postgresql:
  enabled: true

  tls: 
    enabled: true
    autoGenerated: true

  persistence:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 20Gi

config:
  network:
    chainid: 443
    genesisjson: '{}'
    batch:
        interval: 1s
        maxinterval: 1s
        maxsize: 56320
    gas:
        basefee: "1000000000"
        mingasprice: "1000000000"
        paymentaddress: "0x0000000000000000000000000000000000000000"
        batchexecutionlimit: "30000000"
        localexecutioncap: "300000000000"
    l1:
        chainid: 11155111
        blocktime: 15s
        starthash: "0x0000000000000000000000000000000000000000"
        l1contracts:
            management: "0x0000000000000000000000000000000000000000"
            messagebus: "0x0000000000000000000000000000000000000000"
            bridge: "0x0000000000000000000000000000000000000000"
            crosschain: "0x0000000000000000000000000000000000000000"
            rollup: "0x0000000000000000000000000000000000000000"
            enclaveRegistry: "0x0000000000000000000000000000000000000000"
            networkConfig: "0x0000000000000000000000000000000000000000"
    rollup:
        interval: 15m0s
        maxinterval: 10m0s
        maxsize: 131072
    sequencer:
        p2paddress: obscuronode-0-sepolia-testnet.uksouth.cloudapp.azure.com:10000
        systemcontractsupgrader: "0x0000000000000000000000000000000000000000"
    crosschain:
        interval: 6s
  node:
    nodetype: "validator"
    name: ""
    id:  #Public key of the node
    isgenesis: false
    hostAddress: "obscuronode-0-sepolia-testnet.uksouth.cloudapp.azure.com:10000"
  host:
    db:
        useinmemory: false
        sqlitepath: ""
    debug:
        enablemetrics: true
        metricshttpport: 0
        enableprofiler: false
        enabledebugnamespace: true
    enclave:
        rpcaddresses:
            - obscuronode-enclave:11001
        rpctimeout: 10s
    l1:
        websocketurl: <l1 websocket url>
        l1beaconurl: https://ethereum-sepolia-beacon-api.publicnode.com
        l1blobarchiveurl: "https://eth-beacon-chain-sepolia.drpc.org/rest/"
        rpctimeout: 15s
    log:
        level: 3
        path: sys_out
    p2p:
        isdisabled: false
        bindaddress: 0.0.0.0:10000
        timeout: 10s
    rpc:
        address: 0.0.0.0
        enablehttp: true
        httpport: 8085
        enablews: true
        wsport: 8089
  enclave:
    simulation: false
    enableattestation: true
    db:
        useinmemory: false
        edgelessdbhost: obscuronode-edgelessdb
        sqlitepath: ""
    debug:
        enabledebugnamespace: true
        enableprofiler: false
    l1:
        enableblockvalidation: false
        genesisjson: []
    log:
        level: 3
        path: sys_out
    rpc:
        bindaddress: 0.0.0.0:11001
        timeout: 5s
externalSecrets:
  enabled: false