apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "ten-clean-node.fullname" . }}-pvc-cleanup
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "ten-clean-node.name" . }}-pvc-cleanup
    helm.sh/chart: {{ include "ten-clean-node.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "-9" # Run after SA creation but before DB clean or main chart
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
    {{- with .Values.cleanupJob.pvc.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  template:
    spec:
      {{- if .Values.cleanupJob.pvc.serviceAccount.create }}
      serviceAccountName: {{ .Values.cleanupJob.pvc.serviceAccount.name | default (printf "%s-pvc-cleaner" (include "ten-clean-node.fullname" .)) }}
      {{- end }}
      restartPolicy: Never
      containers:
        - name: pvc-cleaner
          image: "{{ .Values.cleanupJob.pvc.image.repository }}:{{ .Values.cleanupJob.pvc.image.tag }}"
          imagePullPolicy: {{ .Values.cleanupJob.pvc.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              echo "Attempting to delete Enclave PVCs..."

              DEPLOY_HOST="{{ include "ten-clean-node.fullname" . }}-host"
              STS_ENCLAVE="{{ include "ten-clean-node.fullname" . }}-enclave"
              PVC_ENCLAVE_DB="{{ include "ten-clean-node.fullname" . }}-enclave-db"
              PVC_ENCLAVE_DATA="{{ include "ten-clean-node.fullname" . }}-enclave"

              kubectl delete sts "$STS_ENCLAVE" -n {{ .Release.Namespace }} --ignore-not-found=true
              kubectl delete pvc "$PVC_ENCLAVE_DB" -n {{ .Release.Namespace }} --ignore-not-found=true
              kubectl delete pvc "$PVC_ENCLAVE_DATA" -n {{ .Release.Namespace }} --ignore-not-found=true
              kubectl delete pvc "$DEPLOY_HOST" -n {{ .Release.Namespace }} --ignore-not-found=true

              {{- if .Values.enclave02.enabled }}
              echo "Attempting to delete Enclave02 PVCs..."
              STS_ENCLAVE02="{{ include "ten-clean-node.fullname" . }}-enclave02"
              PVC_ENCLAVE02_DB="{{ include "ten-clean-node.fullname" . }}-enclave02-db"
              PVC_ENCLAVE02_DATA="{{ include "ten-clean-node.fullname" . }}-enclave02"
              kubectl delete sts "$STS_ENCLAVE02" -n {{ .Release.Namespace }} --ignore-not-found=true
              kubectl delete pvc "$PVC_ENCLAVE02_DB" -n {{ .Release.Namespace }} --ignore-not-found=true
              kubectl delete pvc "$PVC_ENCLAVE02_DATA" -n {{ .Release.Namespace }} --ignore-not-found=true
              {{- end }}
              echo "PVC deletion process completed."