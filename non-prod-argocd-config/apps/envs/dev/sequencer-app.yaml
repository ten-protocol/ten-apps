apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: dev-sequencer
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/ten-protocol/charts.git
    targetRevision: sepolia-testnet
    path: ten-node             # <-- Path to actual chart
    helm:
      values: |
        global:
          imagePullSecrets: []
          imagePullPolicy: Always


        # -- Overrides the chart's name
        nameOverride: ""

        # -- Overrides the chart's computed fullname
        fullnameOverride: ""
        enclave:
          enabled: true
          replicaCount: 1
          image:
            repository: testnetobscuronet.azurecr.io/obscuronet/dev_enclave
            tag: "latest"
            pullPolicy: Always
            imagePullSecrets: []

          autoscaling:
            enabled: false
            minReplicas: 1
            maxReplicas: 100
            targetCPUUtilizationPercentage: 80

          nodeSelector:
            kubernetes.io/hostname: aks-default-41077064-vmss000000
          pvc:
            storageClass: "default"
            size: 1Gi
          

          tolerations: []

          affinity: {}  # Ensure this matches the agent pool label

          # affinity:
          #   nodeAffinity:
          #     required:
          #       nodeSelectorTerms:
          #       - matchExpressions:
          #         - key: kubernetes.io/hostname
          #           operator: In
          #           values:
          #           - "aks-sgxpool2-37956146-vmss000001"  # Replace with your actual node hostname

          
          readinessProbe:
            enabled: false
          livenessProbe:
            enabled: false

          secretEnv:
            ENCLAVE_DB_SQLITEPATH: ""

          extraEnv: []

          service:
            type: ClusterIP
            port: 11001

          ports:
            - name: rpc
              port: 11001
              containerPort: 11001

          resources:
            limits:
              memory: 5Gi
              cpu: 1000m
            requests:
              memory: 5Gi
              cpu: 500m

          storage:
            storageClass: "default"
            size: 10Gi  

          serviceAccount:
            create: true


        # Ensure this matches the node hostname

        host:
          enabled: true
          replicaCount: 1
          image:
            repository: "testnetobscuronet.azurecr.io/obscuronet/sepolia_host"
            tag: "latest"
            pullPolicy: "Always"
            imagePullSecrets: []
          readinessProbe:
            enabled: false
          livenessProbe:
            enabled: false
            
          secretEnv:
            NODE_PRIVATEKEY: "" #Private key of the node
          extraEnv: []
          service:
            type: LoadBalancer
          ports:
            - name: http
              port: 80
              containerPort: 80
            - name: ws
              port: 81
              containerPort: 81
            - name: p2p
              port: 10000
              containerPort: 10000
          resources:
            limits:
              memory: 1Gi
              cpu: 500m
            requests:
              memory: 1Gi
              cpu: 200m


        postgresql:
          enabled: true

          tls: 
            enabled: true
            autoGenerated: true

          persistence:
            enabled: true
            storageClass: ""
            accessMode: ReadWriteOnce
            size: 20Gi

        edb:
          enabled: true
          image:
            repository: "ghcr.io/edgelesssys"
            tag: "v0.3.2"
            pullPolicy: "Always"
            imagePullSecrets: []
          replicas: 1
          sqlApiHost: "0.0.0.0"
          sqlApiPort: 3306
          restApiHost: "0.0.0.0"
          restApiPort: 8080
          debug: false
          simulation: false
          heapSize: 1
          marbleType: EdgelessDB
          launchMarble: false
          resources:
            limits:
              sgx.intel.com/epc: "10Mi"
              sgx.intel.com/provision: 1
              sgx.intel.com/enclave: 1
          storage:
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
          tolerations:
            - key: sgx.intel.com/epc
              operator: Exists
              effect: NoSchedule
          nodeSelector:
            kubernetes.io/hostname: <sgx enabled k8s node name>
          # nodeName: aks-sgxpool2-37956146-vmss000001  # Ensure this matches the node hostname

        config:
          network:
            chainid: 443
            genesisjson: '{}'
            batch:
                interval: 1s
                maxinterval: 1s
                maxsize: 56320
            gas:
                basefee: "1000000000"
                mingasprice: "1000000000"
                paymentaddress: "0x0000000000000000000000000000000000000000"
                batchexecutionlimit: "30000000"
                localexecutioncap: "300000000000"
            l1:
                chainid: 11155111
                blocktime: 15s
                starthash: "0x0000000000000000000000000000000000000000"
                l1contracts:
                    management: "0x0000000000000000000000000000000000000000"
                    messagebus: "0x0000000000000000000000000000000000000000"
                    bridge: "0x0000000000000000000000000000000000000000"
                    crosschain: "0x0000000000000000000000000000000000000000"
                    rollup: "0x0000000000000000000000000000000000000000"
                    enclaveRegistry: "0x0000000000000000000000000000000000000000"
                    networkConfig: "0x0000000000000000000000000000000000000000"
            rollup:
                interval: 15m0s
                maxinterval: 10m0s
                maxsize: 131072
            sequencer:
                p2paddress: obscuronode-0-sepolia-testnet.uksouth.cloudapp.azure.com:10000
                systemcontractsupgrader: "0x0000000000000000000000000000000000000000"
            crosschain:
                interval: 6s
          node:
            nodetype: "validator"
            name: ""
            id:  #Public key of the node
            isgenesis: false
          host:
            db:
                useinmemory: false
                sqlitepath: ""
            debug:
                enablemetrics: true
                metricshttpport: 0
                enableprofiler: false
                enabledebugnamespace: true
            enclave:
                rpcaddresses:
                    - obscuronode-enclave:11001
                rpctimeout: 10s
            l1:
                websocketurl: <l1 websocket url>
                l1beaconurl: https://ethereum-sepolia-beacon-api.publicnode.com
                l1blobarchiveurl: "https://eth-beacon-chain-sepolia.drpc.org/rest/"
                rpctimeout: 15s
            log:
                level: 3
                path: sys_out
            p2p:
                isdisabled: false
                bindaddress: 0.0.0.0:10000
                timeout: 10s
            rpc:
                address: 0.0.0.0
                enablehttp: true
                httpport: 80
                enablews: true
                wsport: 81
          enclave:
            simulation: false
            enableattestation: true
            db:
                useinmemory: false
                edgelessdbhost: obscuronode-edgelessdb
                sqlitepath: ""
            debug:
                enabledebugnamespace: true
                enableprofiler: false
            l1:
                enableblockvalidation: false
                genesisjson: []
            log:
                level: 3
                path: sys_out
            rpc:
                bindaddress: 0.0.0.0:11001
                timeout: 5s

      
  destination:
    server: https://kubernetes.default.svc
    namespace: dev
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true
